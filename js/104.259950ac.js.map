{"version":3,"file":"js/104.259950ac.js","mappings":"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","sources":["webpack://gutar/./src/page/guitar/chord.config.js","webpack://gutar/./src/page/guitar/chord.vue","webpack://gutar/./src/page/guitar/chord.vue?becf","webpack://gutar/./src/page/guitar/index.vue","webpack://gutar/./src/page/guitar/index.vue?da1f","webpack://gutar/./src/page/guitar/tap-number.vue","webpack://gutar/./src/page/guitar/tap-number.vue?3ee0"],"sourcesContent":["module.exports = {\r\n    chordMap: {\r\n        \"C\": [{fret: 1, string: 2, finger: 1}, {fret: 2, string: 4, finger: 2}, {fret: 3, string: 5, finger: 3}],\r\n        \"D\": [{fret: 2, string: 1, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 3, string: 2, finger: 3}],\r\n        \"E\": [{fret: 1, string: 3, finger: 1}, {fret: 2, string: 4, finger: 2}, {fret: 2, string: 5, finger: 3}],\r\n        \"F\": [{fret: 1, string: 1, finger: 1},{fret: 1, string: 2, finger: 1},{fret: 1, string: 6, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 3, string: 5, finger: 3}, {fret: 3, string: 4, finger: 3}],\r\n        \"G\": [{fret: 2, string: 5, finger: 2}, {fret: 3, string: 6, finger: 3}, {fret: 3, string: 1, finger: 4}],\r\n        \"A\": [{fret: 2, string: 4, finger: 2}, {fret: 2, string: 3, finger: 3}, {fret: 2, string: 2, finger: 4}],\r\n        \"B\": [{fret: 2, string: 1, finger: 1},{fret: 2, string: 5, finger: 1},{fret: 2, string: 6, finger: 1}, {fret: 4, string: 2, finger: 2}, {fret: 4, string: 3, finger: 3}, {fret: 4, string: 4, finger: 4}],\r\n        \"Am\": [{fret: 1, string: 2, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 2, string: 4, finger: 3}],\r\n        \"Dm\": [{fret: 2, string: 1, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 3, string: 2, finger: 3}],\r\n        \"Em\": [{fret: 2, string: 4, finger: 1}, {fret: 2, string: 5, finger: 2}],\r\n    },\r\n    enabledChord:[\"C\",\"D\",\"E\",\"F\",\"G\",\"A\",\"B\",\"Am\",\"Dm\",\"Em\"],\r\n    pitchNames:[\r\n        [{number:3,topDot:1},{number:4,topDot:1},{number:4,topDot:1,half:1},{number:5,topDot:1}],\r\n        [{number:7},{number:1,topDot:1},{number:1,topDot:1,half:1},{number:2,half:1}],\r\n        [{number:5},{number:5,half:1},{number:6},{number:6,half:1}],\r\n        [{number:2},{number:2,half:1},{number:3},{number:4}],\r\n        [{number:6,bottomDot:1},{number:6,bottomDot:1,half:1},{number:7,bottomDot:1},{number:1}],\r\n        [{number:3,bottomDot:1},{number:4,bottomDot:1},{number:4,bottomDot:1,half:1},{number:5,bottomDot:1}]\r\n    ]\r\n}\r\n","<template>\r\n  <div class=\"chord-box\">\r\n    <div class=\"chord-name\">\r\n      {{ name }}\r\n    </div>\r\n    <div class=\"chord-content\">\r\n      <div class=\"chord-sign\"></div>\r\n      <div class=\"chord-table\">\r\n        <div class=\"chord-fret\" v-for=\"fret in state.maxFret\">\r\n          <div class=\"chord-string\" v-for=\"string in 6\" :class=\"string === 6 ? 'chord-string-last' : '' \">\r\n            <div class=\"string-dot\" v-if=\"state.fretInfo[fret] && state.fretInfo[fret][7-string]!==undefined\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport {defineProps, onMounted, reactive} from \"vue\";\r\nimport {chordMap} from \"@/page/guitar/chord.config\";\r\n\r\nconst state = reactive({\r\n  maxFret: 3,\r\n  fretInfo: {}\r\n})\r\n\r\nconst props = defineProps({\r\n  name: {\r\n    required: true,\r\n    type: String\r\n  }\r\n})\r\n\r\nconst init = () => {\r\n  const chordInfo = chordMap[props.name];\r\n  if (chordInfo === undefined) return;\r\n  let fretInfo = {};\r\n  let maxFret = 0;\r\n  for (let i = 0; i < chordInfo.length; i++) {\r\n    const fret = chordInfo[i].fret;\r\n    maxFret = fret > maxFret ? fret : maxFret;\r\n    const string = chordInfo[i].string;\r\n    const finger = chordInfo[i].finger;\r\n    if (fretInfo[fret] === undefined) {\r\n      fretInfo[fret] = {};\r\n    }\r\n    fretInfo[fret][string] = finger;\r\n  }\r\n  state.maxFret = maxFret < 3 ? 3 : maxFret;\r\n  state.fretInfo = fretInfo;\r\n}\r\n\r\ninit();\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.chord-box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  float: left;\r\n\r\n  .chord-name {\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.chord-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .chord-sign {\r\n    display: flex;\r\n  }\r\n\r\n  .chord-table {\r\n    border-bottom: 1px solid black;\r\n  }\r\n}\r\n\r\n.chord-fret {\r\n  display: flex;\r\n  border-top: 1px solid black;\r\n\r\n  .chord-string {\r\n    width: 6px;\r\n    height: 7px;\r\n    border-left: 1px solid black;\r\n  }\r\n\r\n  .chord-string-last {\r\n    width: 0;\r\n  }\r\n\r\n  .string-dot {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    &:before {\r\n      content: '';\r\n      width: 4px;\r\n      height: 4px;\r\n      background-color: black;\r\n      border-radius: 100%;\r\n      float: left;\r\n      margin-left: -2px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./chord.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chord.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chord.vue?vue&type=style&index=0&id=2eb72a0d&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2eb72a0d\"]])\n\nexport default __exports__","<template>\r\n  <div style=\"display: flex;flex-direction: column;height: 100%\">\r\n    <div style=\"width: 100%;\">\r\n      <div style=\"background-color: white;height: 10vh;width: 100%;\">\r\n        <!--   HEAD     -->\r\n      </div>\r\n    </div>\r\n    <div class=\"note-page\">\r\n      <div class=\"note-table\" ref=\"noteTable\" @click=\"startInterval\">\r\n        <div v-for=\"(bar,barIndex) in state.barStack\" class=\"bar-line\">\r\n          <div class=\"chord-line\">\r\n            <div class=\"note-item\"></div>\r\n            <div class=\"note-item\" v-for=\"noteItem in bar\" :key=\"getNoteItemKey()\">\r\n              <div class=\"chord-box\"\r\n                   v-if=\"noteItem.beginChord\">\r\n                <chord :name=\"noteItem.chordName\"></chord>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bar-content\">\r\n            <div class=\"bar-start\">\r\n              <div class=\"bar-start-top\"></div>\r\n              <div class=\"bar-start-center\"></div>\r\n              <div class=\"bar-start-bottom\"></div>\r\n            </div>\r\n            <div>\r\n              <div class=\"string-line\">\r\n                <div class=\"note-item\">\r\n                  <div>\r\n                    <div class=\"note-tab\">\r\n                      <span class=\"note-tab-text\">T</span>\r\n                      <span class=\"note-tab-text\">A</span>\r\n                      <span class=\"note-tab-text\">B</span>\r\n                    </div>\r\n                    <div class=\"note-string\" v-for=\"i in 6\"></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"note-item\" v-for=\"(noteItem,noteIndex) in bar\">\r\n                  <div>\r\n                    <div v-if=\"noteIndex===bar.length-1\" class=\"note-tab-end\">\r\n                      <span class=\"note-tab-text\">&nbsp;</span>\r\n                      <span class=\"note-tab-text\">&nbsp;</span>\r\n                      <span class=\"note-tab-text\">&nbsp;</span>\r\n                    </div>\r\n                    <div class=\"note-string\" v-for=\"i in 6\" :key=\"getNoteItemKey()\">\r\n                      <TapNumber v-if=\"noteItem.string === i\"\r\n                                 :duration=\"60000/state.speed\"\r\n                                 :value=\"noteItem.fret\"\r\n                                 :ref=\"el => addTapNumberRef(barIndex,noteIndex,el)\"\r\n                      ></TapNumber>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"number-line\">\r\n                <div class=\"note-item\"></div>\r\n                <div class=\"note-item\" v-for=\"noteItem in bar\">\r\n                  <div class=\"number-box\">\r\n                    <div class=\"number-dot\" :class=\"noteItem.topDot?'number-dot-show':''\"></div>\r\n                    <div class=\"number-half\" :class=\"noteItem.half?'number-half-show':''\"><span\r\n                        class=\"note-number\">{{ noteItem.number }}</span></div>\r\n                    <div class=\"number-dot\" :class=\"noteItem.bottomDot?'number-dot-show':''\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div style=\"width: 100%\">\r\n      <div style=\"background-color: white;height: 10vh;width: 100%\">\r\n        <!--   FOOT     -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport chordConfig from \"@/page/guitar/chord.config\";\r\nimport {onMounted, reactive, ref} from \"vue\";\r\nimport Chord from \"@/page/guitar/chord.vue\";\r\nimport TapNumber from \"@/page/guitar/tap-number\";\r\n\r\nconst noteTable = ref();\r\n\r\nconst tapNumberRef = {};\r\n\r\nconst addTapNumberRef = (barIndex, noteIndex, el) => {\r\n  if (tapNumberRef[barIndex] === undefined) {\r\n    tapNumberRef[barIndex] = {};\r\n  }\r\n  tapNumberRef[barIndex][noteIndex] = el;\r\n}\r\n\r\nconst state = reactive({\r\n  activeNote: [0, 0],\r\n  interval: undefined,\r\n  //每帧时间\r\n  intervalTime: 10,\r\n  //运行时间\r\n  intervalRunTime: 0,\r\n  //速度\r\n  speed: 60,\r\n  //每小节4拍\r\n  barBeat: 4,\r\n  //4分之1音符为1拍\r\n  beatNote: 1 / 4,\r\n  //最小音符\r\n  minBeatNote: 1 / 8,\r\n  //音符出现权重 全音符、2分之1音符、4分之1音符，8分之一音符\r\n  noteRate: [2, 2, 6, 3],\r\n  //最大品位\r\n  maxFret: 3,\r\n  barStack: [],\r\n  barLength: 10\r\n})\r\n\r\nlet keyIndex = 0;\r\nconst getNoteItemKey = () => {\r\n  keyIndex++;\r\n  return `NoteItem_${keyIndex}`\r\n}\r\n\r\nconst pushBar = (pushSize) => {\r\n  for (let i = 0; i < pushSize; i++) {\r\n    let beatNoteStack = [];\r\n    //小节剩余的拍子\r\n    let leftNote = state.barBeat * state.beatNote;\r\n    let barBeatIndex = 0;\r\n    //最快的拍子\r\n    let maxBarBeatIndex = state.barBeat * state.beatNote / state.minBeatNote;\r\n    //小节拍子\r\n    let barNoteSize = 0;\r\n    //需要弹奏的音符数量\r\n    let fretStringSize = 0;\r\n    while (barBeatIndex < maxBarBeatIndex) {\r\n      const noteSize = barBeatIndex * state.minBeatNote;\r\n      if (barNoteSize > noteSize) {\r\n        if (noteSize % state.beatNote === 0) {\r\n          //在拍子上补-1表示休止符\r\n          beatNoteStack.push(-1);\r\n        } else {\r\n          //不在拍子上补\r\n          beatNoteStack.push(0);\r\n        }\r\n      } else {\r\n        //获取随机拍子\r\n        let note = getRandomNote();\r\n        if (note <= leftNote) {\r\n          leftNote -= note;\r\n        } else {\r\n          note = leftNote;\r\n          leftNote = 0;\r\n        }\r\n        beatNoteStack.push(note);\r\n        fretStringSize += 1;\r\n        barNoteSize += note;\r\n      }\r\n      barBeatIndex++;\r\n    }\r\n    //获取随机弹奏位置\r\n    let randomFretStringArr = getRandomFretString(fretStringSize);\r\n    //该小节\r\n    let barItem = [];\r\n    let randomFretStringIndex = 0;\r\n    for (let i = 0; i < beatNoteStack.length; i++) {\r\n      let note = beatNoteStack[i];\r\n      if (note > 0) {\r\n        let fretString = randomFretStringArr[randomFretStringIndex];\r\n        let pitchName = chordConfig.pitchNames[fretString.string - 1][fretString.fret];\r\n        barItem.push({\r\n          note: note,\r\n          ...fretString,\r\n          ...pitchName\r\n        })\r\n        randomFretStringIndex++;\r\n      } else {\r\n        barItem.push({\r\n          note: note\r\n        });\r\n      }\r\n    }\r\n    //移除头部小节\r\n    if (state.barStack.length >= state.barLength) {\r\n      state.barStack.splice(0, 1);\r\n    }\r\n    //追加新小节\r\n    state.barStack.push(barItem);\r\n  }\r\n}\r\nconst getRandomFretString = (size) => {\r\n  let result = [];\r\n  let chordLength = chordConfig.enabledChord.length;\r\n  let chordContinueSize = 0;\r\n  let randomChordName;\r\n  for (let i = 0; i < size; i++) {\r\n    let beginChord = false;\r\n    if (chordContinueSize < 1) {\r\n      let useChord = (i === 0 || Math.random() > 0.5) && (size - i > 1);\r\n      if (useChord) {\r\n        let randomChordIndex = Math.floor(Math.random() * chordLength);\r\n        beginChord = true;\r\n        randomChordName = chordConfig.enabledChord[randomChordIndex];\r\n        let chordItemLength = chordConfig.chordMap[randomChordName].length;\r\n        chordContinueSize = 2 + Math.floor(Math.random() * (chordItemLength - 1));\r\n      } else {\r\n        result.push({\r\n          fret: Math.floor(Math.random() * (state.maxFret + 1)),\r\n          string: Math.ceil(Math.random() * 6),\r\n        })\r\n      }\r\n    }\r\n    if (chordContinueSize > 0) {\r\n      let chord = chordConfig.chordMap[randomChordName];\r\n      let chordItemLength = chordConfig.chordMap[randomChordName].length;\r\n      let chordItemIndex = Math.floor(Math.random() * chordItemLength);\r\n      let chordItem = chord[chordItemIndex];\r\n      result.push({\r\n        beginChord: beginChord,\r\n        chordName: randomChordName,\r\n        fret: chordItem.fret,\r\n        string: chordItem.string\r\n      })\r\n      chordContinueSize--;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nconst getRandomNote = () => {\r\n  let maxIndex = 0;\r\n  let maxRate = 0;\r\n  for (let index = 0; index < state.noteRate.length; index++) {\r\n    let rate = state.noteRate[index] * Math.random()\r\n    if (rate > maxRate) {\r\n      maxRate = rate;\r\n      maxIndex = index;\r\n    }\r\n  }\r\n  let note = 1 / (1 << maxIndex)\r\n  return note;\r\n}\r\n\r\nconst noteIntervalEvent = () => {\r\n  if (state.barStack.length < state.barLength) {\r\n    pushBar(state.barLength - state.barStack.length);\r\n  } else {\r\n    const barTime = 60000 / state.speed * state.barBeat;\r\n    if (state.intervalRunTime % barTime < state.intervalTime) {\r\n      pushBar(1);\r\n    }\r\n  }\r\n}\r\n\r\nconst animationIntervalEvent = () => {\r\n  const barTime = 60000 / state.speed * state.barBeat;\r\n  if (noteTable.value.children[0]) {\r\n    let barHeight = noteTable.value.children[0].clientHeight;\r\n    let marginTop = state.intervalRunTime % barTime / barTime * barHeight;\r\n    noteTable.value.style = `margin-top:${-marginTop}px`;\r\n  }\r\n}\r\n\r\nlet runningNoteIndex = -1;\r\nconst runningNoteEvent = () => {\r\n  const barIndex = 1;\r\n  const minBeatTime = 60000 / state.speed / state.beatNote * state.minBeatNote;\r\n  const noteIndex = Math.floor(state.intervalRunTime / minBeatTime);\r\n  if (noteIndex !== runningNoteIndex) {\r\n    runningNoteIndex = noteIndex;\r\n    const note = state.barStack[barIndex][noteIndex];\r\n    console.log(`[${barIndex},${runningNoteIndex}] -> {fret:${note !== undefined?note.fret:'undefined'}`)\r\n    if (note !== undefined && note.fret > -1) {\r\n      const ref = tapNumberRef[barIndex][runningNoteIndex];\r\n      if(ref) ref.togglePause();\r\n    }\r\n  }\r\n}\r\n\r\nconst startInterval = () => {\r\n  if (state.interval !== undefined) {\r\n    clearInterval(state.interval);\r\n    state.interval = undefined;\r\n    return;\r\n  }\r\n\r\n  state.interval = setInterval(() => {\r\n    noteIntervalEvent();\r\n    animationIntervalEvent();\r\n    runningNoteEvent();\r\n    state.intervalRunTime += state.intervalTime;\r\n  }, state.intervalTime)\r\n}\r\n\r\nonMounted(() => {\r\n  pushBar(state.barLength - state.barStack.length - 1);\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.note-page {\r\n  flex: auto;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.note-table {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.bar-content {\r\n  display: flex;\r\n}\r\n\r\n.bar-line {\r\n  width: 100%;\r\n  display: flex;\r\n  padding-top: 10px;\r\n  padding-bottom: 20px;\r\n  flex-direction: column;\r\n}\r\n\r\n.chord-line {\r\n  display: flex;\r\n}\r\n\r\n.string-line {\r\n  width: 100%;\r\n  display: flex;\r\n}\r\n\r\n.number-line {\r\n  width: 100%;\r\n  display: flex;\r\n  border-left: 2px solid black;\r\n  padding-top: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.note-item {\r\n  width: 40px;\r\n  text-align: center;\r\n\r\n  .note-string {\r\n    display: block;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    height: 2px;\r\n    background-color: black;\r\n    line-height: 0px;\r\n  }\r\n\r\n  .note-number {\r\n    font-weight: lighter;\r\n    margin-left: -5px;\r\n  }\r\n}\r\n\r\n.number-top-dot:before {\r\n  width: 4px;\r\n  height: 4px;\r\n  border-radius: 4px;\r\n  background-color: black;\r\n}\r\n\r\n.number-bottom-dot:after {\r\n  width: 4px;\r\n  height: 4px;\r\n  border-radius: 4px;\r\n  background-color: black;\r\n}\r\n\r\n.number-box {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  height: 30px;\r\n}\r\n\r\n.number-dot {\r\n  width: 3px;\r\n  height: 3px;\r\n  border-radius: 3px;\r\n  background-color: transparent;\r\n  margin: 0 auto;\r\n}\r\n\r\n.number-dot-show {\r\n  background-color: #464646;\r\n}\r\n\r\n.note-tab {\r\n  height: 100%;\r\n  border-left: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  float: left;\r\n}\r\n\r\n.note-tab-end {\r\n  height: 100%;\r\n  border-right: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  float: right;\r\n}\r\n\r\n.note-tab-text {\r\n  font-size: 20px;\r\n  line-height: 20px;\r\n  display: inline-block;\r\n}\r\n\r\n.number-half:before {\r\n  content: '#';\r\n  width: 0;\r\n  margin-left: 5px;\r\n  float: left;\r\n  font-weight: lighter;\r\n  display: inline-block;\r\n  color: transparent;\r\n}\r\n\r\n.number-half-show:before {\r\n  color: black;\r\n}\r\n\r\n.bar-start {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  float: left;\r\n  width: 4px;\r\n\r\n  .bar-start-top {\r\n    display: inline-block;\r\n    height: 6px;\r\n    width: 8px;\r\n    background-color: black;\r\n    border-radius: 0 0 200% 0;\r\n\r\n    &:before {\r\n      content: '';\r\n      display: inline-block;\r\n      height: 4px;\r\n      width: 8px;\r\n      background-color: white;\r\n      border-radius: 0 0 200% 0;\r\n      float: left;\r\n    }\r\n  }\r\n\r\n  .bar-start-center {\r\n    flex: 1;\r\n    border-left: 3px solid black;\r\n  }\r\n\r\n  .bar-start-bottom {\r\n    display: inline-block;\r\n    height: 6px;\r\n    width: 8px;\r\n    background-color: black;\r\n    border-radius: 0 200% 0 0;\r\n\r\n    &:before {\r\n      margin-top: 2px;\r\n      content: '';\r\n      display: inline-block;\r\n      height: 4px;\r\n      width: 8px;\r\n      background-color: white;\r\n      border-radius: 0 200% 0 0;\r\n      float: left;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=21c3d0a4&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21c3d0a4\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"item\">\r\n    <div class=\"item-animation\">\r\n      <div v-if=\"state.start && state.result===undefined\"\r\n           class=\"item-circle\"\r\n           :class=\"state.isPause?'animation-pause':'animation-running'\"\r\n           :style=\"{ 'animation': `circle-close ${props.duration/1000}s linear` }\">\r\n      </div>\r\n      <div v-if=\"state.result!==undefined\"\r\n           :style=\"`width:${state.scoreBoxSize}px;height:${state.scoreBoxSize}px;margin-top:${1-state.scoreBoxSize/2}px`\"\r\n           class=\"item-result\"\r\n           :class=\"`item-result-${state.result}`\">\r\n        <span class=\"score-name\">{{ state.result }}</span>\r\n      </div>\r\n    </div>\r\n    <span style=\"display:block;width: 100%;\" :class=\"state.result!==undefined?`number-${state.result}`:''\">{{\r\n        value\r\n      }}</span>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport {defineProps, onMounted, reactive} from \"vue\";\r\n\r\nconst scoreName = ['miss', 'good', 'great', 'perfect']\r\nconst beginTime = new Date().getTime();\r\n\r\nconst state = reactive({\r\n  result: undefined,\r\n  continueTime: 0,\r\n  scoreBoxSize: 0,\r\n  start: false,\r\n  isPause: true\r\n});\r\n\r\nconst props = defineProps({\r\n  value: {\r\n    required: true,\r\n    type: Number\r\n  },\r\n  duration: {\r\n    required: true,\r\n    type: Number\r\n  },\r\n  delay: {\r\n    required: false,\r\n    default: 0,\r\n    type: Number\r\n  }\r\n})\r\n\r\nconst setScore = (score) => {\r\n  if (state.isPause || !state.start || state.result !== undefined) return;\r\n  state.continueTime = new Date().getTime() - beginTime;\r\n  const rate = state.continueTime / props.duration;\r\n  const left = rate >= 1 ? 0 : 1 - rate;\r\n  const boxSize = 20 + Math.floor(20 * left);\r\n  state.scoreBoxSize = boxSize + boxSize % 2;\r\n  state.result = scoreName[score];\r\n}\r\n\r\nlet delayTimeOut;\r\nlet delayTime = 0;\r\nlet delayTimeStamp = 0;\r\nconst togglePause = () => {\r\n  if (delayTimeOut !== undefined) {\r\n    clearTimeout(delayTimeOut);\r\n  }\r\n  state.isPause = !state.isPause;\r\n  if (!state.isPause) {\r\n    delayTimeStamp = new Date().getTime();\r\n    if (props.delay > delayTime) {\r\n      delayTimeOut = setTimeout(() => {\r\n        begin();\r\n      }, props.delay - delayTime)\r\n    } else {\r\n      begin();\r\n    }\r\n  } else {\r\n    delayTime = new Date().getTime() - delayTimeStamp;\r\n  }\r\n}\r\n\r\nlet setScoreTimeOut;\r\nlet setScoreTime = 0;\r\nlet setScoreTimeStamp = 0;\r\nconst begin = () => {\r\n  state.start = true;\r\n  if (setScoreTimeOut !== undefined) {\r\n    clearTimeout(setScoreTimeOut);\r\n  }\r\n  if (!state.isPause) {\r\n    setScoreTimeStamp = new Date().getTime();\r\n    setScoreTimeOut = setTimeout(() => {\r\n      setScore(0);\r\n    }, props.duration - setScoreTime)\r\n  } else {\r\n    setScoreTime = new Date().getTime() - setScoreTimeStamp;\r\n  }\r\n}\r\n\r\ndefineExpose({\r\n  setScore,\r\n  togglePause\r\n})\r\n\r\n</script>\r\n<style lang=\"less\">\r\n@keyframes circle-close {\r\n  0% {\r\n    border: 1px solid #3f3f3f;\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-top: -19px;\r\n  }\r\n  100% {\r\n    border: 1px solid #3f3f3f;\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-top: -9px;\r\n  }\r\n}\r\n\r\n@keyframes score-show {\r\n  0% {\r\n    opacity: 100%;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n</style>\r\n<style lang=\"less\" scoped>\r\n.animation-running {\r\n  animation-play-state: running !important;\r\n}\r\n\r\n.animation-pause {\r\n  animation-play-state: paused !important;\r\n}\r\n\r\n.item {\r\n  width: 20px;\r\n  height: 2px;\r\n  margin: 10px 0;\r\n  text-align: center;\r\n  line-height: 2px;\r\n}\r\n\r\n.item-animation {\r\n  width: 100%;\r\n  height: 0;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  .item-circle {\r\n    border-radius: 100%;\r\n    align-items: center;\r\n    flex-shrink: 0;\r\n  }\r\n}\r\n\r\n.item-result {\r\n  opacity: 0;\r\n  border-radius: 100%;\r\n  animation: score-show 0.8s linear;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-shrink: 0;\r\n\r\n  .score-name {\r\n    line-height: 12px;\r\n    color: white;\r\n    transform: scale(0.6);\r\n    margin-left: -3px;\r\n  }\r\n}\r\n\r\n.item-result-miss {\r\n  font-size: 12px;\r\n  background-color: #afb6b6;\r\n}\r\n\r\n.item-result-good {\r\n  font-size: 13px;\r\n  background-color: #c6ffff;\r\n}\r\n\r\n.item-result-great {\r\n  font-size: 14px;\r\n  background-color: #76ffff;\r\n}\r\n\r\n.item-result-perfect {\r\n  font-size: 12px;\r\n  background-color: #00ffff;\r\n}\r\n\r\n.number-miss {\r\n  color: #afb6b6;\r\n}\r\n\r\n.number-good {\r\n  color: #008bda;\r\n}\r\n\r\n.number-great {\r\n  color: #008bda;\r\n}\r\n\r\n.number-perfect {\r\n  color: #008bda;\r\n}\r\n</style>\r\n","import script from \"./tap-number.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./tap-number.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./tap-number.vue?vue&type=style&index=0&id=3e3fe5ee&lang=less\"\nimport \"./tap-number.vue?vue&type=style&index=1&id=3e3fe5ee&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3e3fe5ee\"]])\n\nexport default __exports__"],"names":["module","exports","chordMap","fret","string","finger","enabledChord","pitchNames","number","topDot","half","bottomDot","state","reactive","maxFret","fretInfo","props","__props","init","chordInfo","name","undefined","i","length","__exports__","noteTable","ref","tapNumberRef","addTapNumberRef","barIndex","noteIndex","el","activeNote","interval","intervalTime","intervalRunTime","speed","barBeat","beatNote","minBeatNote","noteRate","barStack","barLength","keyIndex","getNoteItemKey","pushBar","pushSize","beatNoteStack","leftNote","barBeatIndex","maxBarBeatIndex","barNoteSize","fretStringSize","noteSize","push","note","getRandomNote","randomFretStringArr","getRandomFretString","barItem","randomFretStringIndex","fretString","pitchName","chordConfig","splice","size","randomChordName","result","chordLength","chordContinueSize","beginChord","useChord","Math","random","randomChordIndex","floor","chordItemLength","ceil","chord","chordItemIndex","chordItem","chordName","maxIndex","maxRate","index","rate","noteIntervalEvent","barTime","animationIntervalEvent","value","children","barHeight","clientHeight","marginTop","style","runningNoteIndex","runningNoteEvent","minBeatTime","console","log","togglePause","startInterval","clearInterval","setInterval","onMounted","scoreName","beginTime","Date","getTime","continueTime","scoreBoxSize","start","isPause","setScore","score","duration","left","boxSize","delayTimeOut","delayTime","delayTimeStamp","clearTimeout","delay","setTimeout","begin","setScoreTimeOut","setScoreTime","setScoreTimeStamp","__expose"],"sourceRoot":""}