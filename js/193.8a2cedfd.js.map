{"version":3,"file":"js/193.8a2cedfd.js","mappings":"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","sources":["webpack://gutar/./src/page/guitar/chord.config.js","webpack://gutar/./src/page/guitar/chord.vue","webpack://gutar/./src/page/guitar/chord.vue?becf","webpack://gutar/./src/page/guitar/index.vue","webpack://gutar/./src/page/guitar/index.vue?da1f"],"sourcesContent":["module.exports = {\r\n    chordMap: {\r\n        \"C\": [{fret: 1, string: 2, finger: 1}, {fret: 2, string: 4, finger: 2}, {fret: 3, string: 5, finger: 3}],\r\n        \"D\": [{fret: 2, string: 1, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 3, string: 2, finger: 3}],\r\n        \"E\": [{fret: 1, string: 3, finger: 1}, {fret: 2, string: 4, finger: 2}, {fret: 2, string: 5, finger: 3}],\r\n        \"F\": [{fret: 1, string: 1, finger: 1},{fret: 1, string: 2, finger: 1},{fret: 1, string: 6, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 3, string: 5, finger: 3}, {fret: 3, string: 4, finger: 3}],\r\n        \"G\": [{fret: 2, string: 5, finger: 2}, {fret: 3, string: 6, finger: 3}, {fret: 3, string: 1, finger: 4}],\r\n        \"A\": [{fret: 2, string: 4, finger: 2}, {fret: 2, string: 3, finger: 3}, {fret: 2, string: 2, finger: 4}],\r\n        \"B\": [{fret: 2, string: 1, finger: 1},{fret: 2, string: 5, finger: 1},{fret: 2, string: 6, finger: 1}, {fret: 4, string: 2, finger: 2}, {fret: 4, string: 3, finger: 3}, {fret: 4, string: 4, finger: 4}],\r\n        \"Am\": [{fret: 1, string: 2, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 2, string: 4, finger: 3}],\r\n        \"Dm\": [{fret: 2, string: 1, finger: 1}, {fret: 2, string: 3, finger: 2}, {fret: 3, string: 2, finger: 3}],\r\n        \"Em\": [{fret: 2, string: 4, finger: 1}, {fret: 2, string: 5, finger: 2}],\r\n    },\r\n    enabledChord:[\"C\",\"D\",\"E\",\"F\",\"G\",\"A\",\"B\",\"Am\",\"Dm\",\"Em\"],\r\n    pitchNames:[\r\n        [{number:3,topDot:1},{number:4,topDot:1},{number:4,topDot:1,half:1},{number:5,topDot:1}],\r\n        [{number:7},{number:1,topDot:1},{number:1,topDot:1,half:1},{number:2,half:1}],\r\n        [{number:5},{number:5,half:1},{number:6},{number:6,half:1}],\r\n        [{number:2},{number:2,half:1},{number:3},{number:4}],\r\n        [{number:6,bottomDot:1},{number:6,bottomDot:1,half:1},{number:7,bottomDot:1},{number:1}],\r\n        [{number:3,bottomDot:1},{number:4,bottomDot:1},{number:4,bottomDot:1,half:1},{number:5,bottomDot:1}]\r\n    ]\r\n}\r\n","<template>\r\n  <div class=\"chord-box\">\r\n    <div class=\"chord-name\">\r\n      {{ name }}\r\n    </div>\r\n    <div class=\"chord-content\">\r\n      <div class=\"chord-sign\"></div>\r\n      <div class=\"chord-table\">\r\n        <div class=\"chord-fret\" v-for=\"fret in state.fretLength\">\r\n          <div class=\"chord-string\" v-for=\"string in 6\" :class=\"string === 6 ? 'chord-string-last' : '' \">\r\n            <div class=\"string-dot\" v-if=\"state.fretInfo[fret] && state.fretInfo[fret][7-string]!==undefined\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport {defineProps, onMounted, reactive} from \"vue\";\r\nimport {chordMap} from \"@/page/guitar/chord.config\";\r\n\r\nconst state = reactive({\r\n  fretLength: 3,\r\n  fretInfo: {}\r\n})\r\n\r\nconst props = defineProps({\r\n  name: {\r\n    required: true,\r\n    type: String\r\n  }\r\n})\r\n\r\nconst init = () => {\r\n  const chordInfo = chordMap[props.name];\r\n  if (chordInfo === undefined) return;\r\n  let fretInfo = {};\r\n  for (let i = 0; i < chordInfo.length; i++) {\r\n    const fret = chordInfo[i].fret;\r\n    const string = chordInfo[i].string;\r\n    const finger = chordInfo[i].finger;\r\n    if (fretInfo[fret] === undefined) {\r\n      fretInfo[fret] = {};\r\n    }\r\n    fretInfo[fret][string] = finger;\r\n  }\r\n  state.fretInfo = fretInfo;\r\n}\r\n\r\ninit();\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.chord-box {\r\n  display: flex;\r\n  flex-direction: column;\r\n  float: left;\r\n\r\n  .chord-name {\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.chord-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .chord-sign {\r\n    display: flex;\r\n  }\r\n\r\n  .chord-table {\r\n    border-bottom: 1px solid black;\r\n  }\r\n}\r\n\r\n.chord-fret {\r\n  display: flex;\r\n  border-top: 1px solid black;\r\n\r\n  .chord-string {\r\n    width: 6px;\r\n    height: 7px;\r\n    border-left: 1px solid black;\r\n  }\r\n\r\n  .chord-string-last {\r\n    width: 0;\r\n  }\r\n\r\n  .string-dot {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    &:before {\r\n      content: '';\r\n      width: 4px;\r\n      height: 4px;\r\n      background-color: black;\r\n      border-radius: 100%;\r\n      float: left;\r\n      margin-left: -2px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./chord.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./chord.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./chord.vue?vue&type=style&index=0&id=f429460c&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f429460c\"]])\n\nexport default __exports__","<template>\r\n  <div style=\"display: flex;flex-direction: column;height: 100%\">\r\n    <div style=\"width: 100%;\">\r\n      <div style=\"background-color: white;height: 10vh;width: 100%;\">\r\n        <!--   HEAD     -->\r\n      </div>\r\n    </div>\r\n    <div class=\"note-page\">\r\n      <div class=\"note-table\" ref=\"noteTable\" @click=\"startInterval\">\r\n        <div v-for=\"(bar,barIndex) in state.barStack\" class=\"bar-line\">\r\n          <div class=\"chord-line\">\r\n            <div class=\"note-item\"></div>\r\n            <div class=\"note-item\" v-for=\"noteItem in bar\" :key=\"getNoteItemKey()\">\r\n              <div class=\"chord-box\"\r\n                   v-if=\"noteItem.beginChord\">\r\n                <chord :name=\"noteItem.chordName\"></chord>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"bar-content\">\r\n            <div class=\"bar-start\">\r\n              <div class=\"bar-start-top\"></div>\r\n              <div class=\"bar-start-center\"></div>\r\n              <div class=\"bar-start-bottom\"></div>\r\n            </div>\r\n            <div>\r\n              <div class=\"string-line\">\r\n                <div class=\"note-item\">\r\n                  <div>\r\n                    <div class=\"note-tab\">\r\n                      <span class=\"note-tab-text\">T</span>\r\n                      <span class=\"note-tab-text\">A</span>\r\n                      <span class=\"note-tab-text\">B</span>\r\n                    </div>\r\n                    <div class=\"note-string\"></div>\r\n                    <div class=\"note-string\"></div>\r\n                    <div class=\"note-string\"></div>\r\n                    <div class=\"note-string\"></div>\r\n                    <div class=\"note-string\"></div>\r\n                    <div class=\"note-string\"></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"note-item\" v-for=\"(noteItem,noteIndex) in bar\">\r\n                  <div>\r\n                    <div v-if=\"noteIndex===bar.length-1\" class=\"note-tab-end\">\r\n                      <span class=\"note-tab-text\">&nbsp;</span>\r\n                      <span class=\"note-tab-text\">&nbsp;</span>\r\n                      <span class=\"note-tab-text\">&nbsp;</span>\r\n                    </div>\r\n                    <div class=\"note-string\">{{ noteItem.string === 1 ? noteItem.fret : '' }}</div>\r\n                    <div class=\"note-string\">{{ noteItem.string === 2 ? noteItem.fret : '' }}</div>\r\n                    <div class=\"note-string\">{{ noteItem.string === 3 ? noteItem.fret : '' }}</div>\r\n                    <div class=\"note-string\">{{ noteItem.string === 4 ? noteItem.fret : '' }}</div>\r\n                    <div class=\"note-string\">{{ noteItem.string === 5 ? noteItem.fret : '' }}</div>\r\n                    <div class=\"note-string\">{{ noteItem.string === 6 ? noteItem.fret : '' }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"number-line\">\r\n                <div class=\"note-item\"></div>\r\n                <div class=\"note-item\" v-for=\"noteItem in bar\">\r\n                  <div class=\"number-box\">\r\n                    <div class=\"number-dot\" :class=\"noteItem.topDot?'number-dot-show':''\"></div>\r\n                    <div class=\"number-half\" :class=\"noteItem.half?'number-half-show':''\"><span\r\n                        class=\"note-number\">{{ noteItem.number }}</span></div>\r\n                    <div class=\"number-dot\" :class=\"noteItem.bottomDot?'number-dot-show':''\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div style=\"width: 100%\">\r\n      <div style=\"background-color: white;height: 10vh;width: 100%\">\r\n        <!--   FOOT     -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport chordConfig from \"@/page/guitar/chord.config\";\r\nimport {onMounted, reactive, ref} from \"vue\";\r\nimport Chord from \"@/page/guitar/chord.vue\";\r\n\r\nconst noteTable = ref();\r\n\r\nconst state = reactive({\r\n  activeNote: [0, 0],\r\n  interval: undefined,\r\n  //每帧时间\r\n  interValTime: 10,\r\n  //运行时间\r\n  intervalRunTime: 0,\r\n  //速度\r\n  speed: 60,\r\n  //每小节4拍\r\n  barBeat: 4,\r\n  //4分之1音符为1拍\r\n  beatNote: 1 / 4,\r\n  //最小音符\r\n  minBeatNote: 1 / 8,\r\n  //音符出现权重 全音符、2分之1音符、4分之1音符，8分之一音符\r\n  noteRate: [2, 2, 6, 3],\r\n  //最大品位\r\n  maxFret: 3,\r\n  barStack: [],\r\n  barLength: 10\r\n})\r\n\r\nlet keyIndex = 0;\r\nconst getNoteItemKey = () => {\r\n  keyIndex++;\r\n  return `NoteItem_${keyIndex}`\r\n}\r\n\r\nconst pushBar = (pushSize) => {\r\n  for (let i = 0; i < pushSize; i++) {\r\n    let beatNoteStack = [];\r\n    //小节剩余的拍子\r\n    let leftNote = state.barBeat * state.beatNote;\r\n    let barBeatIndex = 0;\r\n    //最快的拍子\r\n    let maxBarBeatIndex = state.barBeat * state.beatNote / state.minBeatNote;\r\n    //小节拍子\r\n    let barNoteSize = 0;\r\n    //需要弹奏的音符数量\r\n    let fretStringSize = 0;\r\n    while (barBeatIndex < maxBarBeatIndex) {\r\n      const noteSize = barBeatIndex * state.minBeatNote;\r\n      if (barNoteSize > noteSize) {\r\n        if (noteSize % state.beatNote === 0) {\r\n          //在拍子上补-1表示休止符\r\n          beatNoteStack.push(-1);\r\n        } else {\r\n          //不在拍子上补\r\n          beatNoteStack.push(0);\r\n        }\r\n      } else {\r\n        //获取随机拍子\r\n        let note = getRandomNote();\r\n        if (note <= leftNote) {\r\n          leftNote -= note;\r\n        } else {\r\n          note = leftNote;\r\n          leftNote = 0;\r\n        }\r\n        beatNoteStack.push(note);\r\n        fretStringSize += 1;\r\n        barNoteSize += note;\r\n      }\r\n      barBeatIndex++;\r\n    }\r\n    //获取随机弹奏位置\r\n    let randomFretStringArr = getRandomFretString(fretStringSize);\r\n    //该小节\r\n    let barItem = [];\r\n    let randomFretStringIndex = 0;\r\n    for (let i = 0; i < beatNoteStack.length; i++) {\r\n      let note = beatNoteStack[i];\r\n      if (note > 0) {\r\n        let fretString = randomFretStringArr[randomFretStringIndex];\r\n        let pitchName = chordConfig.pitchNames[fretString.string - 1][fretString.fret];\r\n        barItem.push({\r\n          note: note,\r\n          ...fretString,\r\n          ...pitchName\r\n        })\r\n        randomFretStringIndex++;\r\n      } else {\r\n        barItem.push({\r\n          note: note\r\n        });\r\n      }\r\n    }\r\n    //移除头部小节\r\n    if (state.barStack.length >= state.barLength) {\r\n      state.barStack.splice(0, 1);\r\n    }\r\n    //追加新小节\r\n    state.barStack.push(barItem);\r\n  }\r\n}\r\nconst getRandomFretString = (size) => {\r\n  let result = [];\r\n  let chordLength = chordConfig.enabledChord.length;\r\n  let chordContinueSize = 0;\r\n  let randomChordName;\r\n  for (let i = 0; i < size; i++) {\r\n    let beginChord = false;\r\n    if (chordContinueSize < 1) {\r\n      let useChord = (i === 0 || Math.random() > 0.5) && (size - i > 1);\r\n      if (useChord) {\r\n        let randomChordIndex = Math.floor(Math.random() * chordLength);\r\n        beginChord = true;\r\n        randomChordName = chordConfig.enabledChord[randomChordIndex];\r\n        let chordItemLength = chordConfig.chordMap[randomChordName].length;\r\n        chordContinueSize = 2 + Math.floor(Math.random() * (chordItemLength - 1));\r\n      } else {\r\n        result.push({\r\n          fret: Math.floor(Math.random() * (state.maxFret + 1)),\r\n          string: Math.ceil(Math.random() * 6),\r\n        })\r\n      }\r\n    }\r\n    if (chordContinueSize > 0) {\r\n      let chord = chordConfig.chordMap[randomChordName];\r\n      let chordItemLength = chordConfig.chordMap[randomChordName].length;\r\n      let chordItemIndex = Math.floor(Math.random() * chordItemLength);\r\n      let chordItem = chord[chordItemIndex];\r\n      result.push({\r\n        beginChord: beginChord,\r\n        chordName: randomChordName,\r\n        fret: chordItem.fret,\r\n        string: chordItem.string\r\n      })\r\n      chordContinueSize--;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nconst getRandomNote = () => {\r\n  let maxIndex = 0;\r\n  let maxRate = 0;\r\n  for (let index = 0; index < state.noteRate.length; index++) {\r\n    let rate = state.noteRate[index] * Math.random()\r\n    if (rate > maxRate) {\r\n      maxRate = rate;\r\n      maxIndex = index;\r\n    }\r\n  }\r\n  let note = 1 / (1 << maxIndex)\r\n  return note;\r\n}\r\n\r\nconst noteIntervalEvent = () => {\r\n  if (state.barStack.length < state.barLength) {\r\n    pushBar(state.barLength - state.barStack.length);\r\n  } else {\r\n    const barTime = 60000 / state.speed * state.barBeat;\r\n    if (state.intervalRunTime % barTime < state.interValTime) {\r\n      pushBar(1);\r\n    }\r\n  }\r\n}\r\n\r\nconst animationIntervalEvent = () => {\r\n  const barTime = 60000 / state.speed * state.barBeat;\r\n  if (noteTable.value.children[0]) {\r\n    let barHeight = noteTable.value.children[0].clientHeight;\r\n    let marginTop = state.intervalRunTime % barTime / barTime * barHeight;\r\n    noteTable.value.style = `margin-top:${-marginTop}px`;\r\n  }\r\n}\r\n\r\nconst startInterval = () => {\r\n  if (state.interval !== undefined) {\r\n    clearInterval(state.interval);\r\n    state.interval = undefined;\r\n    return;\r\n  }\r\n\r\n  state.interval = setInterval(() => {\r\n    noteIntervalEvent();\r\n    animationIntervalEvent();\r\n    state.intervalRunTime += state.interValTime;\r\n  }, state.interValTime)\r\n}\r\n\r\nonMounted(() => {\r\n  pushBar(state.barLength - state.barStack.length - 1);\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.note-page {\r\n  flex: auto;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.note-table {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.bar-content {\r\n  display: flex;\r\n}\r\n\r\n.bar-line {\r\n  width: 100%;\r\n  display: flex;\r\n  padding-top: 10px;\r\n  padding-bottom: 20px;\r\n  flex-direction: column;\r\n}\r\n\r\n.chord-line {\r\n  display: flex;\r\n}\r\n\r\n.string-line {\r\n  width: 100%;\r\n  display: flex;\r\n}\r\n\r\n.number-line {\r\n  width: 100%;\r\n  display: flex;\r\n  border-left: 2px solid black;\r\n  padding-top: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.note-item {\r\n  width: 40px;\r\n  text-align: center;\r\n\r\n  .note-string {\r\n    display: block;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    height: 2px;\r\n    background-color: black;\r\n    line-height: 0px;\r\n  }\r\n\r\n  .note-number {\r\n    font-weight: lighter;\r\n    margin-left: -5px;\r\n  }\r\n}\r\n\r\n.number-top-dot:before {\r\n  width: 4px;\r\n  height: 4px;\r\n  border-radius: 4px;\r\n  background-color: black;\r\n}\r\n\r\n.number-bottom-dot:after {\r\n  width: 4px;\r\n  height: 4px;\r\n  border-radius: 4px;\r\n  background-color: black;\r\n}\r\n\r\n.number-box {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  height: 40px;\r\n}\r\n\r\n.number-dot {\r\n  width: 3px;\r\n  height: 3px;\r\n  border-radius: 3px;\r\n  background-color: transparent;\r\n  margin: 0 auto;\r\n}\r\n\r\n.number-dot-show {\r\n  background-color: #464646;\r\n}\r\n\r\n.note-tab {\r\n  height: 100%;\r\n  border-left: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  float: left;\r\n}\r\n\r\n.note-tab-end {\r\n  height: 100%;\r\n  border-right: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  float: right;\r\n}\r\n\r\n.note-tab-text {\r\n  font-size: 20px;\r\n  line-height: 20px;\r\n  display: inline-block;\r\n}\r\n\r\n.number-half:before {\r\n  content: '#';\r\n  width: 0;\r\n  margin-left: 5px;\r\n  float: left;\r\n  font-weight: lighter;\r\n  display: inline-block;\r\n  color: transparent;\r\n}\r\n\r\n.number-half-show:before {\r\n  color: black;\r\n}\r\n\r\n.bar-start {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  float: left;\r\n  width: 4px;\r\n\r\n  .bar-start-top {\r\n    display: inline-block;\r\n    height: 6px;\r\n    width: 8px;\r\n    background-color: black;\r\n    border-radius: 0 0 200% 0;\r\n\r\n    &:before {\r\n      content: '';\r\n      display: inline-block;\r\n      height: 4px;\r\n      width: 8px;\r\n      background-color: white;\r\n      border-radius: 0 0 200% 0;\r\n      float: left;\r\n    }\r\n  }\r\n\r\n  .bar-start-center {\r\n    flex: 1;\r\n    border-left: 3px solid black;\r\n  }\r\n\r\n  .bar-start-bottom {\r\n    display: inline-block;\r\n    height: 6px;\r\n    width: 8px;\r\n    background-color: black;\r\n    border-radius: 0 200% 0 0;\r\n\r\n    &:before {\r\n      margin-top: 2px;\r\n      content: '';\r\n      display: inline-block;\r\n      height: 4px;\r\n      width: 8px;\r\n      background-color: white;\r\n      border-radius: 0 200% 0 0;\r\n      float: left;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=0c02963e&lang=less&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0c02963e\"]])\n\nexport default __exports__"],"names":["module","exports","chordMap","fret","string","finger","enabledChord","pitchNames","number","topDot","half","bottomDot","state","reactive","fretLength","fretInfo","props","__props","init","chordInfo","name","undefined","i","length","__exports__","noteTable","ref","activeNote","interval","interValTime","intervalRunTime","speed","barBeat","beatNote","minBeatNote","noteRate","maxFret","barStack","barLength","keyIndex","getNoteItemKey","pushBar","pushSize","beatNoteStack","leftNote","barBeatIndex","maxBarBeatIndex","barNoteSize","fretStringSize","noteSize","push","note","getRandomNote","randomFretStringArr","getRandomFretString","barItem","randomFretStringIndex","fretString","pitchName","chordConfig","splice","size","randomChordName","result","chordLength","chordContinueSize","beginChord","useChord","Math","random","randomChordIndex","floor","chordItemLength","ceil","chord","chordItemIndex","chordItem","chordName","maxIndex","maxRate","index","rate","noteIntervalEvent","barTime","animationIntervalEvent","value","children","barHeight","clientHeight","marginTop","style","startInterval","clearInterval","setInterval","onMounted"],"sourceRoot":""}